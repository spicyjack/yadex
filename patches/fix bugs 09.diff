diff -C8 ../orig/editloop.cc ../src/editloop.cc
*** ../orig/editloop.cc	Thu Jul  9 17:17:59 2009
--- ../src/editloop.cc	Sat Aug 29 02:48:16 2009
***************
*** 304,321 ****
--- 304,326 ----
  // "~Print",      YK_,   MIF_SACTIVE, false, 0,
     "~Quit",       'q',   0,
     NULL);
  
  
  if (yg_level_format == YGLF_HEXEN)
     e.mb_menu[MBM_EDIT] = new Menu (NULL,
       "~Copy object(s)",          'o',    0,
+ #ifdef SMALL_LAPTOP_KEYBOARD
+       "~Add object",              'I', 0,
+       "~Delete object(s)",        '\b', 0,
+ #else
        "~Add object",              YK_INS, 0,
        "~Delete object(s)",        YK_DEL, 0,
+ #endif
        "~Exchange object numbers", 24,     0,
        "~Preferences...",          YK_F5,  0,
        "~Snap to grid",            'y',    MIF_VTICK, &e.grid_snap,		     0,
        "~Lock grid step",          'z',    MIF_VTICK, &e.grid_step_locked,	     0,
        "Load ~BEHAVIOR lump",      'b',    0,
        NULL);
  else
     e.mb_menu[MBM_EDIT] = new Menu (NULL,
***************
*** 1357,1373 ****
--- 1362,1382 ----
           else if (e.obj_type == OBJ_THINGS)
              {
              menu_thing_flags->set_title ("Clear thing flag");
              e.modpopup->set (menu_thing_flags, 0);
              }
           }
  
        // [F8]: pop up the "Misc. operations" menu
+ #ifdef SMALL_LAPTOP_KEYBOARD
+       else if (is.key == 'M'
+ #else
        else if (is.key == YK_F8
+ #endif
           && e.menubar->highlighted () < 0)
           {
           e.modpopup->set (e.menubar->get_menu (MBI_MISC), 1);
           }
  
        // [F9]: pop up the "Insert a standard object" menu
        else if (is.key == YK_F9
           && e.menubar->highlighted () < 0)
***************
*** 2068,2084 ****
--- 2077,2097 ----
           sector_slice (e.Selected->next->objnum, e.Selected->objnum);
           ForgetSelection (&e.Selected);
           RedrawMap = 1;
           DragObject = false;
           StretchSelBox = false;
        }
        
        // [Del]: delete the current object
+ #ifdef SMALL_LAPTOP_KEYBOARD
+       else if (is.key == '\b'	// backspace
+ #else
        else if (is.key == YK_DEL
+ #endif
           && (e.Selected || e.highlighted ())) /* 'Del' */
  	 {
  	 if (e.obj_type == OBJ_THINGS
  	  || Expert
  	  || Confirm (-1, -1,
  		(e.Selected && e.Selected->next ?
  		     "Do you really want to delete these objects?"
  		   : "Do you really want to delete this object?"),
***************
*** 2096,2112 ****
--- 2109,2129 ----
           // deleted, HighlightObject is still called with a bad object#).
           e.highlighted.nil ();
  	 DragObject = false;
  	 StretchSelBox = false;
  	 RedrawMap = 1;
  	 }
  
        // [Ins]: insert a new object
+ #ifdef SMALL_LAPTOP_KEYBOARD
+       else if (is.key == 'I' || is.key == YK_INS + YK_SHIFT) /* 'Ins' */
+ #else
        else if (is.key == YK_INS || is.key == YK_INS + YK_SHIFT) /* 'Ins' */
+ #endif
  	 {
  	 SelPtr cur;
           int prev_obj_type = e.obj_type;
  
  	 /* first special case: if several vertices are
  	    selected, add new linedefs */
  	 if (e.obj_type == OBJ_VERTICES
  	    && e.Selected && e.Selected->next)
Only in ../src/: editloop.cc.rej
Only in ../src/: editloop.cc~
diff -C8 ../orig/editobj.cc ../src/editobj.cc
*** ../orig/editobj.cc	Thu Apr 24 15:32:39 2003
--- ../src/editobj.cc	Thu Sep 10 22:02:13 2009
***************
*** 929,948 ****
  	    {
  	    struct LineDef *l = LineDefs + cur->objnum;
  	    l->sidedef2 = -1;  /* remove ref. to 2nd SD */
  	    l->flags &= ~0x04; /* clear "2S" bit */
  	    l->flags |= 0x01;  /* set "Im" bit */
  
  	    if (is_sidedef (l->sidedef1))
  	       {
! 	       struct SideDef *s = SideDefs + l->sidedef1;
! 	       strcpy (s->tex1, "-");
! 	       strcpy (s->tex2, "-");
! 	       strcpy (s->tex3, default_middle_texture);
  	       }
  	    /* Don't delete the 2nd sidedef, it could be used
                 by another linedef. And if it isn't, the next
                 cross-references check will delete it anyway. */
  	    }
  	 }
        // Sector -> Mirror horizontally
        else if (objtype == OBJ_SECTORS)
--- 929,963 ----
  	    {
  	    struct LineDef *l = LineDefs + cur->objnum;
  	    l->sidedef2 = -1;  /* remove ref. to 2nd SD */
  	    l->flags &= ~0x04; /* clear "2S" bit */
  	    l->flags |= 0x01;  /* set "Im" bit */
  
  	    if (is_sidedef (l->sidedef1))
  	       {
! 	       struct SideDef *s = & SideDefs[ l->sidedef1 ];
! 	       // [WDJ] Have no idea why they trashed the good side.
! 	       if( strncmp( s->tex3, "-", WAD_TEX_NAME ) == 0 )
! 		{
! 		  // Middle texture is missing
! 		  if( strncmp( s->tex2, "-", WAD_TEX_NAME) != 0 )
! 		   {
! 		     // [WDJ] Use the good lower texture
! 		     strncpy (s->tex3, s->tex2, WAD_TEX_NAME);
! 		   }else{
! 		     // re-init (confused default)
! 	             strncpy (s->tex3, default_middle_texture, WAD_TEX_NAME);
! 			// [WDJ] Use of strcpy trashes the sector number
! 			// with the string terminator when 8 char name.
! 		   }
! 	        }
! 	       // Always remove the upper and lower texture on 1s linedef
!                strcpy (s->tex1, "-");
!                strcpy (s->tex2, "-");
  	       }
  	    /* Don't delete the 2nd sidedef, it could be used
                 by another linedef. And if it isn't, the next
                 cross-references check will delete it anyway. */
  	    }
  	 }
        // Sector -> Mirror horizontally
        else if (objtype == OBJ_SECTORS)
Only in ../src/: editobj.cc~
diff -C8 ../orig/s_merge.cc ../src/s_merge.cc
*** ../orig/s_merge.cc	Fri Mar 28 06:37:32 2003
--- ../src/s_merge.cc	Thu Sep 10 21:51:47 2009
***************
*** 76,91 ****
--- 76,96 ----
  
  void DeleteLineDefsJoinSectors (SelPtr *ldlist) /* SWAP! */
  {
  SelPtr cur, slist;
  int    sd1, sd2;
  int    s1, s2;
  char   msg[80];
  
+ /* [WDJ] Fix
+  1. When linedef has same sector on both sides it should not delete
+     whole sector.
+  2. Makes mistakes in sector changes.
+ */
  /* first, do the tests for all LineDefs */
  for (cur = *ldlist; cur; cur = cur->next)
     {
     ObjectsNeeded (OBJ_LINEDEFS, 0);
     sd1 = LineDefs[cur->objnum].sidedef1;
     sd2 = LineDefs[cur->objnum].sidedef2;
     if (sd1 < 0 || sd2 < 0)
        {
***************
*** 110,128 ****
  for (cur = *ldlist; cur; cur = cur->next)
     {
     ObjectsNeeded (OBJ_LINEDEFS, 0);
     sd1 = LineDefs[cur->objnum].sidedef1;
     sd2 = LineDefs[cur->objnum].sidedef2;
     ObjectsNeeded (OBJ_SIDEDEFS, 0);
     s1 = SideDefs[sd1].sector;
     s2 = SideDefs[sd2].sector;
!    slist = NULL;
!    SelectObject (&slist, s2);
!    SelectObject (&slist, s1);
!    MergeSectors (&slist);
!    ForgetSelection (&slist);
     }
  DeleteObjects (OBJ_LINEDEFS, ldlist);
  }
  
  
  
--- 115,136 ----
  for (cur = *ldlist; cur; cur = cur->next)
     {
     ObjectsNeeded (OBJ_LINEDEFS, 0);
     sd1 = LineDefs[cur->objnum].sidedef1;
     sd2 = LineDefs[cur->objnum].sidedef2;
     ObjectsNeeded (OBJ_SIDEDEFS, 0);
     s1 = SideDefs[sd1].sector;
     s2 = SideDefs[sd2].sector;
!    if ( s1 != s2 )      // [WDJ] Not when both sidedefs are the same sector.
!     {
!       slist = NULL;
!       SelectObject (&slist, s2);
!       SelectObject (&slist, s1);
!       MergeSectors (&slist);
!       ForgetSelection (&slist);
!     }
     }
  DeleteObjects (OBJ_LINEDEFS, ldlist);
  }
  
  
  
Only in ../src/: s_merge.cc~
diff -C8 ../orig/version.cc ../src/version.cc
*** ../orig/version.cc	Thu Jul  9 18:50:46 2009
--- ../src/version.cc	Thu Sep 10 02:37:35 2009
***************
*** 1,4 ****
  // DO NOT EDIT -- generated from VERSION
  
! extern const char *const yadex_source_date = "2009-07-09";
  extern const char *const yadex_version = "1.7.0";
--- 1,4 ----
  // DO NOT EDIT -- generated from VERSION
  
! extern const char *const yadex_source_date = "2009-09-10";
  extern const char *const yadex_version = "1.7.0";
diff -C8 ../orig/yadex.h ../src/yadex.h
*** ../orig/yadex.h	Thu Jul  9 17:10:59 2009
--- ../src/yadex.h	Sat Aug 29 02:40:16 2009
***************
*** 26,41 ****
--- 26,50 ----
  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
  Place, Suite 330, Boston, MA 02111-1307, USA.
  */
  
  
  #ifndef YH_YADEX  /* DO NOT INSERT ANYTHING BEFORE THIS LINE */
  #define YH_YADEX
  
+ // User defines
+ // Use the stdint defines that know the target machine best.
+ #define USE_STDINT	1
+ 
+ // Use the keyboard assignments for laptops without all function keys
+ // #define SMALL_LAPTOP_KEYBOARD
+ 
+ 
+ 
  
  #include "config.h"
  
  
  // Sanity checks
  #if ! (defined Y_BGI ^ defined Y_X11)
  #error "You must #define either Y_BGI or Y_X11"
  #endif
***************
*** 85,113 ****
  
  
  /*
   *	Platform-independant types and formats.
   */
  typedef unsigned char  u8;
  typedef signed   char  i8;
  
  typedef unsigned short u16;
  #define F_U16_D "hu"
  #define F_U16_H "hX"
  
- typedef signed   short i16;
  #define F_I16_D "hd"
  #define F_I16_H "hX"
  
- typedef unsigned long  u32;
  #define F_U32_D "lu"
  #define F_U32_H "lX"
  
- typedef signed   long  i32;
  #define F_I32_D "ld"
  #define F_I32_H "lX"
  
  
  /*
   *	Platform definitions
   */
  #if defined Y_DOS
--- 94,131 ----
  
  
  /*
   *	Platform-independant types and formats.
   */
  typedef unsigned char  u8;
  typedef signed   char  i8;
  
+ #ifdef USE_STDINT
+ #include <stdint.h>
+ typedef uint16_t  u16;
+ typedef int16_t   i16;
+ typedef uint32_t  u32;
+ typedef int32_t   i32;
+ #else
+ // standard guess, which will eventually fail
  typedef unsigned short u16;
+ typedef signed   short i16;
+ typedef unsigned long  u32;
+ typedef signed   long  i32;
+ #endif
  #define F_U16_D "hu"
  #define F_U16_H "hX"
  
  #define F_I16_D "hd"
  #define F_I16_H "hX"
  
  #define F_U32_D "lu"
  #define F_U32_H "lX"
  
  #define F_I32_D "ld"
  #define F_I32_H "lX"
  
  
  /*
   *	Platform definitions
   */
  #if defined Y_DOS
Only in ../src/: yadex.h~
